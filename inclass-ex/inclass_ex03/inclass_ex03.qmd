---
title: "In-class Exercise 3"
date: "`25 January 2023`"
format: html
date-modified: "`r Sys.Date()`"
number-sections: true

execute:
  message: true
  warning: false
  echo: true
  eval: true
  
editor: visual
---

### Importing packages

```{r}
pacman::p_load(sf, tmap, tidyverse)
```

### Importing the file

```{r}
NGA_wp <- read_rds("data/rds/NGA_wp.rds")
```

### Plotting the Choropleth

Can combine both fill and borders, and use tm_polygon instead, both are okay

```{r}
p1 <- tm_shape(NGA_wp) + 
  tm_fill('wp_functional',
          n=10,
          style="equal",
          palette = "Blues") +
  tm_borders(lwd = 0.1,
             alpha = 1) +
  tm_layout(main.title = "Distribution of functional water points",
            legend.outside = FALSE)
p1
```

```{r}
p2 <- tm_shape(NGA_wp) + 
  tm_fill('total_wp',
          n=10,
          style="equal",
          palette = "Blues") +
  tm_borders(lwd = 0.1,
             alpha = 1) +
  tm_layout(main.title = "Distribution of total water points",
            legend.outside = FALSE)
p2
```

```{r}
tmap_arrange(p2, p1, nrow=1)
```

### Deriving Proportion of Functional Water Points and Non-functional water points

```{r}
NGA_wp <- NGA_wp %>%
  mutate(pct_functional = wp_functional/total_wp) %>%
  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)
```

Plotting map of rate

```{r}
p3 <- tm_shape(NGA_wp) + 
  tm_fill('pct_functional',
          n=10,
          style="equal",
          palette = "Blues",
          legend.hist = TRUE) +
  tm_borders(lwd = 0.1,
             alpha = 1) +
  tm_layout(main.title = "Distribution of working water points",
            legend.outside = TRUE)
p3
```

### Percentile Map

::: callout-note
Breakpoints can be derived from the percentile.

Passing an explicit vector of cumulative probabilities
:::

### Data Preparation:

Exclude records with NA

```{r}
NGA_wp <- NGA_wp %>% 
  drop_na()
```

### Step 2: Creating customized classification and extracting values

We need to drop the geometric field else there will be error with the quantile

```{r}
percent <- c(0,0.1,.1,.5,.9,.99,1)
var <- NGA_wp["pct_functional"] %>%
  st_set_geometry(NULL)
quantile(var[,1], percent)
```

```{r}
get.var <- function(vname, df) {
  v <- df[vname] %>%
    st_set_geometry(NULL)
  v <- unname(v[,1])
  return(v)
}
```

```{r}
percentmap <- function(vnam, df,legtitle=NA, mtitle="Percentile Map"){
  percent <- c(0, .01,.1,.5,.9,.99,1)
  var <- get.var(vnam, df)
  bperc <- quantile(var, percent)
  tm_shape(df) +
  tm_polygons() +
  tm_shape(df) +
    tm_fill(vnam,
            title=legtitle,
            breaks=bperc,
            palette = "Blues",
            labels=c("< 1%", "1% - 10%", "10% - 50%", "50% - 90%", "90% - 99%", "99% - 100%")) +
    tm_borders() +
    tm_layout(main.title = mtitle,
              title.position = c("right", "bottom"))
  
}
```

Running the function

```{r}
percentmap("wp_nonfunctional", NGA_wp)
```
