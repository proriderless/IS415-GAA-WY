---
title: "In-class Exercise 4"
author: "Wen Yang"
date: "30 January 2023"
format: html
date-modified: "`r Sys.Date()`"
number-sections: true

execute:
  message: true
  warning: false
  echo: true
  eval: true
  
editor: visual
---

### Loading the package

```{r}
pacman::p_load(maptools, sf, raster, spatstat, tmap)
```

Things to learn from the code chunk

### Importing Data

```{r}
childcare_sf <- st_read("data/childcare.geojson") %>%
  st_transform(crs = 3414)
```

```{r}
sg_sf <- st_read(dsn = "data", layer="CostalOutline")
```

```{r}
mpsz_sf <- st_read(dsn = "data", 
                layer = "MP14_SUBZONE_WEB_PL")
```

Notes:

::: callout-tip
Use tmap_mode('plot') for staticmap

Change alpha of dots to change opacity for dots

Change view as vector

Also, there is an order to the way you display the tmap:

tmap_mode -\> tmap_plot, shape, dots, view

tm_bubbles -\> For proportion
:::

```{r}
tmap_mode('view') + 
  tm_shape(childcare_sf)+
  tm_dots(alpha = 0.5)+
  tm_view(set.zoom.limits = c(11,14))
```

#### Convert from Shape File to Spatial Feature File

```{r}
childcare <- as_Spatial(childcare_sf)
mpsz <- as_Spatial(mpsz_sf)
sg <- as_Spatial(sg_sf)
```

#### Convert from Spatial Feature to Generic

```{r}
childcare_sp <- as(childcare, "SpatialPoints")
sg_sp <- as(sg, "SpatialPolygons")
```

#### Convert to PPP format (Spatstat)

Cos for points they need x y coordinates

```{r}
childcare_ppp <- as(childcare_sp, "ppp")
childcare_ppp
```

Jitter to handle duplicate data

```{r}
childcare_ppp_jit <- rjitter(childcare_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)
```

```{r}
any(duplicated(childcare_ppp_jit))
```

```{r}
plot(childcare_ppp_jit)
```

```{r}
sg_owin <- as(sg_sp, "owin")
plot(sg_owin)

```

```{r}
childcareSG_ppp = childcare_ppp[sg_owin]
plot(childcareSG_ppp)
```

Longer the bandwidth, the smoother it is.

If data points are well-distributed/well-defined, then fixed is better, adaptive otherwise

In the childcare sense, fixed is better because we know they typically cluster around residential areas

Use L function since that has a clearer interpretation (can maybe display all)

The number of monte carlo simulation we run will depend on our confidence level. (so if run 95 times, our confidence is 95% and 99 is 99%)
